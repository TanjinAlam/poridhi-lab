server {
    listen 8500;
    server_name localhost;

    # Default service registry endpoint
    location / {
        root /usr/share/nginx/html;
        index index.json;
        add_header Content-Type application/json;
        add_header X-Discovery-Service "DC3-Primary";
        add_header X-Inter-DC-Access "Enabled";
    }

    # Service registration endpoint
    location /services {
        root /usr/share/nginx/html;
        try_files /index.json =404;
        add_header Content-Type application/json;
        add_header X-Total-Services "8";
        add_header X-Active-Datacenters "DC1,DC2,DC3";
    }

    # Cross-datacenter service discovery
    location /api/dc1/services {
        root /usr/share/nginx/html;
        try_files /dc1-services.json =404;
        add_header Content-Type application/json;
        add_header X-Cross-DC-Query "DC1-Services";
        add_header X-Query-Source "Discovery-DC3";
    }

    location /api/dc2/services {
        root /usr/share/nginx/html;
        try_files /dc2-services.json =404;
        add_header Content-Type application/json;
        add_header X-Cross-DC-Query "DC2-Services";
        add_header X-Query-Source "Discovery-DC3";
    }

    location /api/dc3/services {
        root /usr/share/nginx/html;
        try_files /dc3-services.json =404;
        add_header Content-Type application/json;
        add_header X-Cross-DC-Query "DC3-Services";
        add_header X-Query-Source "Discovery-DC3";
    }

    # Inter-datacenter routing information
    location /api/routing {
        root /usr/share/nginx/html;
        try_files /routing-info.json =404;
        add_header Content-Type application/json;
        add_header X-Routing-Info "Inter-DC-Backbone";
    }

    # Service mesh topology
    location /api/topology {
        root /usr/share/nginx/html;
        try_files /topology.json =404;
        add_header Content-Type application/json;
        add_header X-Topology-Info "Service-Mesh";
    }

    # Cross-datacenter health aggregation
    location /api/health/global {
        root /usr/share/nginx/html;
        try_files /global-health.json =404;
        add_header Content-Type application/json;
        add_header X-Global-Health "Multi-DC-Status";
    }

    # Service discovery by service type
    location /api/services/gateways {
        return 200 '{"service_type":"gateways","instances":[{"datacenter":"DC1","endpoint":"http://172.20.0.10:80","region":"North-America"},{"datacenter":"DC2","endpoint":"http://172.21.0.10:8080","region":"Europe"},{"datacenter":"DC3","endpoint":"http://172.22.0.10:8081","region":"Asia-Pacific"}],"total_instances":3}';
        add_header Content-Type application/json;
        add_header X-Service-Type "Gateway-Discovery";
    }

    # Health check with inter-DC capabilities
    location /health {
        return 200 '{"status":"healthy","service":"multi-datacenter-discovery","version":"2.0.0","datacenter":"DC3","region":"Asia-Pacific","inter_dc_connectivity":true,"monitored_datacenters":["DC1","DC2","DC3"],"total_services":8,"cross_dc_queries_enabled":true,"last_topology_update":"2025-06-12T12:34:56Z"}';
        add_header Content-Type application/json;
        add_header X-Health-Check "Multi-DC-Discovery";
        add_header X-Service-Discovery-Version "2.0.0";
    }
}
